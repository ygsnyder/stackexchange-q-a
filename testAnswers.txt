"const array = [2, 5, 9];console.log(array);const index = array.indexOf(5);if (index >; -1) {  array.splice(index, 1);}console.log(array); "
"const string = 'foo';const substring = 'oo';console.log(string.includes(substring));"
"delete myObject.regex;delete myObject['regex'];var prop = 'regex';delete myObject[prop];"
"export function hello() {  return 'Hello';}"
"function sayHello(name) {  var text = 'Hello ' + name;  var say = function() { console.log(text); }  say();}sayHello('Joe');"
"str = 'Test abc test test abc test...'.split('abc').join('');"
"Object.keys(obj).length === 0 &amp;&amp; obj.constructor === Object"
"if (strValue) {    }"
"Array.isArray(obj)"
"var arr = [  'Hi',  'Hello',  'Bonjour'];arr.push('Hola');console.log(arr);"
"var p = {    'p1': 'value1',    'p2': 'value2',    'p3': 'value3'};for (var key in p) {    if (p.hasOwnProperty(key)) {        console.log(key + ' ->; ' + p[key]);    }}"
"var isTrueSet = (myValue == 'true');"
"var today = new Date();var dd = String(today.getDate()).padStart(2, '0');var mm = String(today.getMonth() + 1).padStart(2, '0'); var yyyy = today.getFullYear();today = mm + '/' + dd + '/' + yyyy;document.write(today);"
"function clone(obj) {    if (null == obj || 'object' != typeof obj) return obj;    var copy = obj.constructor();    for (var attr in obj) {        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];    }    return copy;}var d1 = new Date();/* Executes function after 5 seconds. */setTimeout(function(){    var d2 = clone(d1);    alert('d1 = ' + d1.toString() + '\\nd2 = ' + d2.toString());}, 5000);"
"let merged = {...obj1, ...obj2};/** There's no limit to the number of objects you can merge. *  Later properties overwrite earlier properties with the same name. */const allRules = {...obj1, ...obj2, ...obj3};"
"A = [];"
"'Hello World!'.startsWith('He'); var haystack = 'Hello world';var prefix = 'orl';haystack.startsWith(prefix); "
"var DecimalSeparator = Number('1.2').toLocaleString().substr(1,1);var AmountWithCommas = Amount.toLocaleString();var arParts = String(AmountWithCommas).split(DecimalSeparator);var intPart = arParts[0];var decPart = (arParts.length >; 1 ? arParts[1] : '');decPart = (decPart + '00').substr(0,2);return '&#xA3; ' + intPart + DecimalSeparator + decPart;"
"for (var key in validation_messages) {        if (!validation_messages.hasOwnProperty(key)) continue;    var obj = validation_messages[key];    for (var prop in obj) {                if (!obj.hasOwnProperty(prop)) continue;                alert(prop + ' = ' + obj[prop]);    }}"
"var obj = {prop1: 'prop1Value', prop2: 'prop2Value', child: {childProp1: 'childProp1Value'}}console.log(obj)"
"Object.keys(obj).length"
"const d = new Date('2010-08-05')const dtf = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' }) const [{ value: mo },,{ value: da },,{ value: ye }] = dtf.formatToParts(d) console.log(`${da}-${mo}-${ye}`)console.log(`${da}&#x1F460;${mo}&#x1F462;${ye}`) // just for fun"
"function numberWithCommas(x) {    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');}"
"hexString = yourNumber.toString(16);"
"var obj = {    key1: value1,    key2: value2};"
"   unshift ->; array <;- push   shift   <;- array ->; pop"
"var obj = {    a: undefined,    b: null,    c: false};for ( var prop in obj ) {    document.writeln( 'Object1: ' + prop );}function Class(){    this.a = undefined;    this.b = null;    this.c = false;}Class.prototype = {    a: undefined,    b: true,    c: true,    d: true,    e: true};var obj2 = new Class();for ( var prop in obj2 ) {    document.writeln( 'Object2: ' + prop );}function hasOwnProperty(obj, prop) {    var proto = obj.__proto__ || obj.constructor.prototype;    return (prop in obj) &amp;&amp;        (!(prop in proto) || proto[prop] !== obj[prop]);}if ( Object.prototype.hasOwnProperty ) {    var hasOwnProperty = function(obj, prop) {        return obj.hasOwnProperty(prop);    }}for ( var prop in obj2 ) {    if ( hasOwnProperty(obj2, prop) ) {        document.writeln( 'Object2 w/ hasOwn: ' + prop );    }}"
"function foo() {    console.log(this);}foo(); var obj = {bar: foo};obj.bar(); new foo(); "
"var array1 = ['Vijendra', 'Singh'];var array2 = ['Singh', 'Shakya'];console.log(array1.concat(array2));"
"var url_string = 'http:var url = new URL(url_string);var c = url.searchParams.get('c');console.log(c);"
"function shuffle(array) {  var currentIndex = array.length, temporaryValue, randomIndex;    while (0 !== currentIndex) {        randomIndex = Math.floor(Math.random() * currentIndex);    currentIndex -= 1;        temporaryValue = array[currentIndex];    array[currentIndex] = array[randomIndex];    array[randomIndex] = temporaryValue;  }  return array;}var arr = [2, 11, 37, 42];shuffle(arr);console.log(arr);"
"var items = [  [1, 2],  [3, 4],  [5, 6]];console.log(items[0][0]); console.log(items[0][1]); console.log(items[1][0]); console.log(items[1][1]); console.log(items);"
"<;script>;  alert('I'm evaluated in the initial global execution context!');  setTimeout(function () {      alert('I'm NOT evaluated in the initial global execution context.');  }, 1);<;/script>;"
">;>;>; a.push(...b)"
"if(Array.prototype.equals)    console.warn('Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.');Array.prototype.equals = function (array) {        if (!array)        return false;        if (this.length != array.length)        return false;    for (var i = 0, l=this.length; i <; l; i++) {                if (this[i] instanceof Array &amp;&amp; array[i] instanceof Array) {                        if (!this[i].equals(array[i]))                return false;               }                   else if (this[i] != array[i]) {                         return false;           }               }           return true;}Object.defineProperty(Array.prototype, 'equals', {enumerable: false});"
"{key: value, key: value, ...}"
"function isInt(n) {   return n % 1 === 0;}"
"window['functionName'](arguments);"
"var intvalue = Math.floor( floatvalue );var intvalue = Math.ceil( floatvalue ); var intvalue = Math.round( floatvalue );var intvalue = Math.trunc( floatvalue );"
"var foo = new Array(45); "
"var stack = [];stack.push(2);       stack.push(5);       var i = stack.pop(); alert(i);            var queue = [];queue.push(2);         queue.push(5);         var i = queue.shift(); alert(i);              "
"var id = 'ctl03_Tabs1';var lastFive = id.substr(id.length - 5); var lastChar = id.substr(id.length - 1); "
"function Foo() {}var foo = new Foo();typeof Foo;             typeof foo;             foo instanceof Foo;     foo.constructor.name;   Foo.name                Foo.prototype.isPrototypeOf(foo);   Foo.prototype.bar = function (x) {return x+x;};foo.bar(21);            "
"var array = string.split(',');"
"function arr_diff (a1, a2) {    var a = [], diff = [];    for (var i = 0; i <; a1.length; i++) {        a[a1[i]] = true;    }    for (var i = 0; i <; a2.length; i++) {        if (a[a2[i]]) {            delete a[a2[i]];        } else {            a[a2[i]] = true;        }    }    for (var k in a) {        diff.push(k);    }    return diff;}console.log(arr_diff(['a', 'b'], ['a', 'b', 'c', 'd']));console.log(arr_diff('abcd', 'abcde'));console.log(arr_diff('zxc', 'zxc'));"
"if (confirm('Are you sure you want to save this thing into the database?')) {    } else {    }"
"var myProp = 'prop';if(myObj.hasOwnProperty(myProp)){    alert('yes, i have that property');}"
"var found = false;for(var i = 0; i <; vendors.length; i++) {    if (vendors[i].Name == 'Magenic') {        found = true;        break;    }}"
"var x = 'some string';alert(x.charAt(0)); "
"var ret = 'data-123'.replace('data-','');console.log(ret);   //prints: 123"
"String.prototype.replaceAt=function(index, replacement) {    return this.substr(0, index) + replacement+ this.substr(index + replacement.length);}"
"str = str.replace(/\\s/g, '');"
"if (/^[\\],:{}\\s]*$/.test(text.replace(/\\\\['\\\\\\/bfnrtu]/g, '@').replace(/'[^'\\\\\\n\\r]*'|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {  }else{  }"
"var input = 'john smith~123 Street~Apt 4~New York~NY~12345';var fields = input.split('~');var name = fields[0];var street = fields[1];"
"str = str.replace(/(?:\\r\\n|\\r|\\n)/g, '<;br>;');"
"var event; if(document.createEvent){    event = document.createEvent('HTMLEvents');    event.initEvent('dataavailable', true, true);    event.eventName = 'dataavailable';    element.dispatchEvent(event);} else {    event = document.createEventObject();    event.eventName = 'dataavailable';    event.eventType = 'dataavailable';    element.fireEvent('on' + event.eventType, event);}"
"setTimeout(function() {    postinsql(topicId);}, 4000)"
"function sortNumber(a, b) {  return a - b;}var numArray = [140000, 104, 99];numArray.sort(sortNumber);console.log(numArray);"
"if (typeof me.onChange !== 'undefined') {     }"
"const age = 3console.log(`I'm ${age} years old!`)"
"if (index <; array.length) {  }"
"const vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);const vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);"
"referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);"
"function stackTrace() {    var err = new Error();    return err.stack;}"
"var userType;if (userIsYoungerThan18) {  userType = 'Minor';} else {  userType = 'Adult';}if (userIsYoungerThan21) {  serveDrink('Grape Juice');} else {  serveDrink('Wine');}"
"var yourNamespace = {    foo: function() {    },    bar: function() {    }};...yourNamespace.foo();"
"var areEqual = string1.toUpperCase() === string2.toUpperCase();"
"if (yourvar === null) "
"delete myArray['lastname'];"
"Array.prototype.remove = function() {    var what, a = arguments, L = a.length, ax;    while (L &amp;&amp; this.length) {        what = a[--L];        while ((ax = this.indexOf(what)) !== -1) {            this.splice(ax, 1);        }    }    return this;};var ary = ['three', 'seven', 'eleven'];ary.remove('seven');/*  returned value: (Array)three,eleven*/"
"function Hello(){    alert('caller is ' + Hello.caller);}"
"var keys = Object.keys(myObject);"
"var obj = { first: 'someVal' };obj[Object.keys(obj)[0]]; "
"return filename.split('.').pop();"
"const rows = [    ['name1', 'city1', 'some other info'],    ['name2', 'city2', 'more info']];let csvContent = 'data:text/csv;charset=utf-8,';rows.forEach(function(rowArray) {    let row = rowArray.join(',');    csvContent += row + '\\r\\n';});"
"var date = new Date();var copiedDate = new Date(date.getTime());"
"object.method();"
"if(typeof someUndeclaredVar == whatever) if(someUndeclaredVar) "
"var twoPlacedFloat = parseFloat(yourString).toFixed(2)"
"isNaN(parseFloat('geoff'))"
"bool = !bool;"
"function parseDate(str) {    var mdy = str.split('/');    return new Date(mdy[2], mdy[0]-1, mdy[1]);}function datediff(first, second) {            return Math.round((second-first)/(1000*60*60*24));}alert(datediff(parseDate(first.value), parseDate(second.value)));"
"var div = document.getElementById('divID');div.innerHTML += 'Extra stuff';"
"function sortArgs(...args) {  return args.sort(function (a, b) { return a - b; });}document.body.innerHTML = sortArgs(12, 4, 6, 8).toString();"
"if (data === parseInt(data, 10))    alert('data is integer')else    alert('data is not an integer')"
"var elementExists = document.getElementById('find-me');"
"var result = Math.round(original*100)/100;"
"mystring = mystring.replace(/\\./g,' ')"
"let array = Array.from(mySet);"
"for(var key in objects) {    var value = objects[key];}"
"function Shape(x, y) {    this.x= x;    this.y= y;}"
"var g_a = 1; delete g_a; console.log(g_a); "
"var dictionary = {};"
"if(!pass || !cpass || !email || !cemail || !user){"
"typeof date.getMonth === 'function'"
"var isoDate = new Date('yourdatehere').toISOString();"
"function getJSONP(url, success) {    var ud = '_' + +new Date,        script = document.createElement('script'),        head = document.getElementsByTagName('head')[0]                || document.documentElement;    window[ud] = function(data) {        head.removeChild(script);        success &amp;&amp; success(data);    };    script.src = url.replace('callback=?', 'callback=' + ud);    head.appendChild(script);}getJSONP('http:    console.log(data);});  "
"id.slice(0, -2)"
"if (history.pushState) {  }"
"function searchTree(element, matchingTitle){     if(element.title == matchingTitle){          return element;     }else if (element.children != null){          var i;          var result = null;          for(i=0; result == null &amp;&amp; i <; element.children.length; i++){               result = searchTree(element.children[i], matchingTitle);          }          return result;     }     return null;}"
"div1 = document.getElementById('div1');alert(div1.getAttribute('onclick'));&#x200B;"
"ko.bindingHandlers.foreachprop = {  transformObject: function (obj) {    var properties = [];    ko.utils.objectForEach(obj, function (key, value) {      properties.push({ key: key, value: value });    });    return properties;  },  init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {    var properties = ko.pureComputed(function () {      var obj = ko.utils.unwrapObservable(valueAccessor());      return ko.bindingHandlers.foreachprop.transformObject(obj);    });    ko.applyBindingsToNode(element, { foreach: properties }, bindingContext);    return { controlsDescendantBindings: true };  }};"
"var i, ii, tempS, tempT     shapes = [  ... ],     texts = [  ... ];for (i = 0, ii = shapes.length; i <; ii; i++) {    tempS = shapes[i].attr( ... );    tempT = texts[i].attr( ...);          shapes[i].drag(move, dragger, up);    texts[i].drag(move, dragger, up);          tempS.pair = tempT;    tempT.pair = tempS;}"
"<;?xml version='1.0' encoding='UTF-8'?>;<;rsp stat='ok'>;  <;list>;    <;widget id='MyTVApp'>;      <;title>;MyTVApp<;/title>;      <;compression size='3383543' type='zip'/>;      <;description>;A basic application for Samsung TVs<;/description>;      <;download>;http:    <;/widget>;  <;/list>;<;/rsp>;"
"function RoundedMax(a) {    var mx = Math.max.apply(Math, a);    if (mx == 0) {return 0};    var size = Math.floor(Math.log(Math.abs(mx)) / Math.LN10);    var magnitude = Math.pow(10, size);    var yMax = Math.ceil(mx / magnitude) * magnitude;    return yMax;}function RoundedMin(a) {    var mn = Math.min.apply(Math, a);    if (mn == 0) {return 0};    var size = Math.floor(Math.log(Math.abs(mn)) / Math.LN10);    var magnitude = Math.pow(10, size);    var yMin = Math.floor(mn / magnitude) * magnitude;    return yMin;}var arr = [-9.9,-1.23,-8.2,-2.01,-4.5,0];document.write(RoundedMax(arr) + ' ' + RoundedMin(arr));"
"var format = 'hh:mm:ss'var time = moment('09:34:00',format),  beforeTime = moment('08:34:00', format),  afterTime = moment('10:34:00', format);if (time.isBetween(beforeTime, afterTime)) {  console.log('is between')} else {  console.log('is not between')}"
"parent.childNodes[1].style.color = 'rgb(155, 102, 102)'; "
"_.intersectionObjects = function(array) {    var slice = Array.prototype.slice;     var rest = slice.call(arguments, 1);    return _.filter(_.uniq(array), function(item) {      return _.every(rest, function(other) {                return _.any(other, function(element) { return _.isEqual(element, item); });      });    });  };"
"new Date('Fri Jan 20 2012 11:51:36 GMT-0500').toUTCString()"
"var chosenValue = Math.random() <; 0.5 ? value1 : value2;"
"var a = [3,5,7,8];a.reverse(); "
"var obj = {};Object.defineProperty( obj, 'MY_FAKE_CONSTANT', {  value: 'MY_FAKE_CONSTANT_VALUE',  writable: false,  enumerable: true,  configurable: true});"
"var children = tableFields.children;for (var i = 0; i <; children.length; i++) {  var tableChild = children[i];  }"
"function toUTF8Array(str) {    var utf8 = [];    for (var i=0; i <; str.length; i++) {        var charcode = str.charCodeAt(i);        if (charcode <; 0x80) utf8.push(charcode);        else if (charcode <; 0x800) {            utf8.push(0xc0 | (charcode >;>; 6),                       0x80 | (charcode &amp; 0x3f));        }        else if (charcode <; 0xd800 || charcode >;= 0xe000) {            utf8.push(0xe0 | (charcode >;>; 12),                       0x80 | ((charcode>;>;6) &amp; 0x3f),                       0x80 | (charcode &amp; 0x3f));        }                else {            i++;                                                charcode = 0x10000 + (((charcode &amp; 0x3ff)<;<;10)                      | (str.charCodeAt(i) &amp; 0x3ff));            utf8.push(0xf0 | (charcode >;>;18),                       0x80 | ((charcode>;>;12) &amp; 0x3f),                       0x80 | ((charcode>;>;6) &amp; 0x3f),                       0x80 | (charcode &amp; 0x3f));        }    }    return utf8;}"
"Number('4.874915326E7') Number('4E27') "
"$ bower -v"
"d3.transform(d3.select(this.parentNode).attr('transform')).translate"
"var destArray = _.uniq(sourceArray, function(x){    return x.name;});"
"curl -v -X POST -H 'Authorization: Bearer YOUR_JWT_HERE'"
"d3.select('svg').on('dblclick.zoom', null);"
"  0  a  g  b  a  b  c  c0 0  0  0  0  0  0  0  0a 0 &#x2196;1  1  1 &#x2196;1  1  1  1b 0  1  1 &#x2196;2  2 &#x2196;2  2  2c 0  1  1  2  2  2 &#x2196;3 &#x2196;3"
"<;a id='aShowHide' onclick='ToggleDisplay(&amp;#34;<;%# DataBinder.Eval(Container.DataItem, 'JobCode') %>;&amp;#34;);'>;Show/Hide<;/a>;"
"String.prototype.shuffle = function () {    var a = this.split(''),        n = a.length;    for(var i = n - 1; i >; 0; i--) {        var j = Math.floor(Math.random() * (i + 1));        var tmp = a[i];        a[i] = a[j];        a[j] = tmp;    }    return a.join('');}console.log('the quick brown fox jumps over the lazy dog'.shuffle());console.log('the quick brown fox jumps over the lazy dog'.shuffle());"
"'&#x141;'.localeCompare('Z', 'pl');              new Intl.Collator('pl').compare('&#x141;','Z');  "
"<;script src='http:<;div id='map-canvas'>;<;/div>;"
"someElement.oninput = function() {  this.onkeydown = null;  };someElement.onkeydown = function() {  };"
"<;script type='text/javascript' src='http:<;script>;var p1 = new google.maps.LatLng(45.463688, 9.18814);var p2 = new google.maps.LatLng(46.0438317, 9.75936230000002);alert(calcDistance(p1, p2));function calcDistance(p1, p2) {  return (google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);}<;/script>;"
"Meteor.publish('counts-by-room', function (roomId) {  var self = this;  var count = 0;  var initializing = true;  var handle = Messages.find({room_id: roomId}).observeChanges({    added: function (doc, idx) {      count++;      if (!initializing)        self.changed('counts', roomId, {count: count});      },    removed: function (doc, idx) {      count--;      self.changed('counts', roomId, {count: count});      }      });  initializing = false;        self.added('counts', roomId, {count: count});    self.ready();    self.onStop(function () {    handle.stop();  });});"
"WebView myWebView = (WebView) findViewById(R.id.webview);WebSettings webSettings = myWebView.getSettings();webSettings.setJavaScriptEnabled(true);"
"var angle = Math.random()*Math.PI*2;"
"document.getElementById('foo').onkeypress = function(e){    if (!e) e = window.event;    var keyCode = e.keyCode || e.which;    if (keyCode == '13'){            return false;    }  }"
"var scripts = document.getElementsByTagName('script');"
"'use strict'function jamie (){    var callerName;    try { throw new Error(); }    catch (e) {         var re = /(\\w+)@|at (\\w+) \\(/g, st = e.stack, m;        re.exec(st), m = re.exec(st);        callerName = m[1] || m[2];    }    console.log(callerName);};function jiminyCricket (){   jamie();}jiminyCricket(); "
"canvas.toDataURL(type,quality);"
"d=document.createElement('div');"
"var a = new Int8Array( [ 1, 2, 3 ] );var b = new Int8Array( [ 4, 5, 6 ] );var c = new Int8Array(a.length + b.length);c.set(a);c.set(b, a.length);console.log(a);console.log(b);console.log(c);"
"var event = new Event('input', {    bubbles: true,    cancelable: true,});element.dispatchEvent(event);"
"    wait = true;    setTimeout('wait = true', 2000);"
"document.addEventListener('keydown', keyDownTextField, false);function keyDownTextField(e) {var keyCode = e.keyCode;  if(keyCode==13) {  alert('You hit the enter key.');  } else {  alert('Oh no you didn't.');  }}"
"new L.Draw.Polyline(map, drawControl.options.polyline).enable();"
"var recent = [    {id: 123,age :12,start: '10/17/13 13:07'},     {id: 13,age :62,start: '07/30/13 16:30'}];"
"var reallyIsNaN = function(x) {   return x !== x;};"
"function _requireById(id) {  return webpackJsonp([], null, [id]);}"
"var now = new Date();var clock = sinon.useFakeTimers(now.getTime());clock.restore();"
"var dateString = '10/23/2015'; var dateObject = new Date(dateString);document.body.innerHTML = dateObject.toString();"
"var obj = {    a: 5,    b: function (param) {        return param;    }};var json = JSON.stringify(obj, function(key, value) {  if (typeof value === 'function') {    return '/Function(' + value.toString() + ')/';  }  return value;});var obj2 = JSON.parse(json, function(key, value) {  if (typeof value === 'string' &amp;&amp;      value.startsWith('/Function(') &amp;&amp;      value.endsWith(')/')) {    value = value.substring(10, value.length - 2);    return eval('(' + value + ')');  }  return value;});document.body.innerHTML = obj2.b(42);"
"const [, b, ...rest] = [1, 2, 3, 4, 5];console.log(b, rest);"
"+----------------------+--------+-------------+|                      |  Sync  |    Async    |+----------------------+--------+-------------+| Single value or null | Option | Promise     || Multiple values      | List   | EventStream |+----------------------+--------+-------------+"
"spinValue = new Animated.Value(0)Animated.timing(    this.spinValue,  {    toValue: 1,    duration: 3000,    easing: Easing.linear  }).start()const spin = this.spinValue.interpolate({  inputRange: [0, 1],  outputRange: ['0deg', '360deg']})"
"yourMockInstance.mockImplementation(() =>; {  throw new Error();});"
"function myClass() {   this.myName = function () {         for (var name in this.global)       if (this.global[name] == this)         return name   } }myClass.prototype.global = thisvar myVar = new myClass()myVar.myName() "
"var geocoder = new GClientGeocoder();geocoder.getLocations('Russia', function (locations) {     var north = locations.Placemark[0].ExtendedData.LatLonBox.north;    var south = locations.Placemark[0].ExtendedData.LatLonBox.south;    var east  = locations.Placemark[0].ExtendedData.LatLonBox.east;    var west  = locations.Placemark[0].ExtendedData.LatLonBox.west;    var bounds = new GLatLngBounds(new GLatLng(south, west),                                    new GLatLng(north, east));    map.setCenter(bounds.getCenter(), map.getBoundsZoomLevel(bounds));});var bounds = new google.maps.LatLngBounds(new google.maps.LatLng(south, west),                                           new google.maps.LatLng(north, east));map.fitBounds(bounds);"
"var add = function(x) {    return function(y) { return x + y; };}"
"if(type == 'datauri') {    document.location.href ='data:application/pdf;base64,' + Base64.encode(buffer);}"
"function allStorage() {    var values = [],        keys = Object.keys(localStorage),        i = keys.length;    while ( i-- ) {        values.push( localStorage.getItem(keys[i]) );    }    return values;}"
"Object.defineProperty(member, 'isGuest', {  get: function() { return this.firstName=='Guest' }});"
"<;script type='text/javascript'>;    $(document).ready(function () {        @RenderSection('DocumentReady', false)    });<;/script>;"
"var obj = {'1' : 'test','0' : 'test 2'};for(var key in obj) {    console.log(key);}"
"var input = {     'fruit' : ['mango','orange'],    'veg'   : ['carrot']} var output = [], item;for (var type in input) {    item = {};    item.type = type;    item.name = input[type];    output.push(item);}document.write(JSON.stringify(output));"
"$('p a').tooltip({placement: 'bottom',trigger: 'manual'}).tooltip('show');"
"define({    load: function (name, parentRequire, load, config) {           var fullUrl = parentRequire.toUrl('foo/bar.css');    }});"
"function updatePostID(val){    document.getElementById('PostID').value = val;    }"
"function bind_trailing_args(fn, ...bound_args) {    return function(...args) {        return fn(...args, ...bound_args);    };}"
"function sharedSetup(startPage) {    beforeEach(function() {        login_as_admin();        browser().navigateTo(startPage);    });    afterEach(function() {        logout();    });};"
"var dates = dates_as_int.map(function(dateStr) {    return new Date(dateStr).getTime();});"
"function isInDOMTree(node) {            return !!(findUltimateAncestor(node).body);}function findUltimateAncestor(node) {               var ancestor = node;   while(ancestor.parentNode) {      ancestor = ancestor.parentNode;   }   return ancestor;}"
"var marker = new google.maps.Marker({    map: map,     position: new google.maps.LatLng(-20.3,30.3)});google.maps.event.addListener(marker, 'dblclick', function(event){    map = marker.getMap();        map.setCenter(overlay.getPosition());     smoothZoom(map, 12, map.getZoom()); });function smoothZoom (map, max, cnt) {    if (cnt >;= max) {        return;    }    else {        z = google.maps.event.addListener(map, 'zoom_changed', function(event){            google.maps.event.removeListener(z);            smoothZoom(map, max, cnt + 1);        });        setTimeout(function(){map.setZoom(cnt)}, 80);     }}  "
"function check_is_in_or_out(marker){  return map.getBounds().contains(marker.getPosition());}"
"window.onunload = function (e) {    opener.somefunction();     opener.document.getElementById('someid').innerHTML = 'update content of parent window';};"
"var a = 'whatever';var b = {};b[a] = 20;alert(b['whatever']); "
"var geocoder, map;function codeAddress(address) {    geocoder = new google.maps.Geocoder();    geocoder.geocode({        'address': address    }, function(results, status) {        if (status == google.maps.GeocoderStatus.OK) {            var myOptions = {                zoom: 8,                center: results[0].geometry.location,                mapTypeId: google.maps.MapTypeId.ROADMAP            }            map = new google.maps.Map(document.getElementById('map_canvas'), myOptions);            var marker = new google.maps.Marker({                map: map,                position: results[0].geometry.location            });        }    });}"
"function NEW(f) {  var obj, ret, proto;    proto = Object(f.prototype) === f.prototype ? f.prototype : Object.prototype;    obj = Object.create(proto);    ret = f.apply(obj, Array.prototype.slice.call(arguments, 1));  if (Object(ret) === ret) {     return ret;  }  return obj;}function Foo (arg) {  this.prop = arg;}Foo.prototype.inherited = 'baz';var obj = NEW(Foo, 'bar');obj.prop;          obj.inherited;     obj instanceof Foo "
"$('#gridName').kendoGrid({  columns: [    { hidden: true, field: 'id' },    { field: 'name' }  ],  dataSource: [ { id: 1, name: 'Jane Doe' }, { id: 2, name: 'John Doe' } ]});"
"const local = this.props.local;"
"let num = 3let str = num.toString().padStart(3, '0')console.log(str) "
"var dad = current_gene_pcp.node().parentNode;"
"define(['jquery-ui', 'backbone'], function() {    $('div').addClass('white');});"
"    function allTrue(obj)    {      for(var o in obj)          if(!obj[o]) return false;              return true;    }        var myObj1 = {title:true, name:true, email:false};    var myObj2 = {title:true, name:true, email:true};    document.write('<;br />;myObj1 all true: ' + allTrue(myObj1));    document.write('<;br />;myObj2 all true: ' + allTrue(myObj2));    "
"const repeat = n =>; f =>; x =>;  n === 0 ? x : repeat (n - 1) (f) (f(x))  console.log(repeat(1e3) (x =>; x + 1) (0)) console.log(repeat(1e5) (x =>; x + 1) (0)) // Error: Uncaught RangeError: Maximum call stack size exceeded"
"<;textfield label='Name' value.sync='el.name' :disabled='myVar'>;"
"function(doc) {  if (doc.type == 'person')   {    emit([doc.net_worth, doc.lastname], null);  }}"
"var inputs = document.getElementsByTagName('INPUT');for (var i = 0; i <; inputs.length; i++) {    if (inputs[i].type === 'submit') {        inputs[i].disabled = true;    }}"
"$(purchaseWin.document).ready(function () {  $(purchaseWin.document).contents().find('#tdProduct').html('2');});"
"function isUrl(s) {   var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&amp;%@!\\-\\/]))?/   return regexp.test(s);}"
"function parseISO8601(timestamp){  var regex = new RegExp('^([\\\\d]{4})-([\\\\d]{2})-([\\\\d]{2})T([\\\\d]{2}):([\\\\d]{2}):([\\\\d]{2})([\\\\+\\\\-])([\\\\d]{2}):([\\\\d]{2})$');  var matches = regex.exec(timestamp);  if(matches != null)  {    var offset = parseInt(matches[8], 10) * 60 + parseInt(matches[9], 10);    if(matches[7] == '-')      offset = -offset;    return new Date(      Date.UTC(        parseInt(matches[1], 10),        parseInt(matches[2], 10) - 1,        parseInt(matches[3], 10),        parseInt(matches[4], 10),        parseInt(matches[5], 10),        parseInt(matches[6], 10)      ) - offset*60*1000    );  }  return null;}"
".no-select{   user-select: none;   -o-user-select:none;   -moz-user-select: none;   -khtml-user-select: none;   -webkit-user-select: none;}"
"<;head>;<;meta http-equiv='content-type' content='text/html; charset=UTF-8'/>;"
"var streetViewService = new google.maps.StreetViewService();var STREETVIEW_MAX_DISTANCE = 100;var latLng = new google.maps.LatLng(40.7140, -74.0062);streetViewService.getPanoramaByLocation(latLng, STREETVIEW_MAX_DISTANCE, function (streetViewPanoramaData, status) {    if (status === google.maps.StreetViewStatus.OK) {            } else {            }});"
"var s = 'abc123';var number = s.match(/\\d+$/);number = parseInt(number, 10);"
"if(document.getElementById('element').classList.contains('class_one')) {    }"
"<;img src='screen.jpg' id='myImage' />;"
" <;img id='ItemPreview' src='' />;"
"listeners : {    itemdblclick: function(dv, record, item, index, e) {        alert('working');    }},"
"var str='someone@example.com';var nameMatch = str.match(/^([^@]*)@/);var name = nameMatch ? nameMatch[1] : null;"
"<;html xmlns='http:  <;head>;    <;script type='text/javascript' src='http:    <;script type='text/javascript'>;      google.load('visualization', '1', {packages: ['table']});    <;/script>;    <;script type='text/javascript'>;      /**      * Gviz icon formatter      * @param {Object<;Number, String>;} Map of numbers to icon URIs      */      var iconFormatter = function(iconMap) {        this.iconMap = iconMap;      }      /**       * Formats a gviz DataTable column       * @param {Object} dt DataTable to format       * @param {Number} column index number       */      iconFormatter.prototype.format = function(dt, column) {        for (var i=0;i<;dt.getNumberOfRows();i++) {          var formattedValue = this.iconMap[dt.getValue(i, column)];          var htmlString = '<;img src='+formattedValue+' />;';          dt.setFormattedValue(i, column, htmlString);                    console.log(dt.getValue(i, column));         }      }    <;/script>;    <;script>;      function drawVisualization() {                var data = new google.visualization.DataTable();        data.addColumn('string', 'Name');        data.addColumn('number', 'Height');        data.addRows(3);        data.setCell(0, 0, 'Tong Ning mu');        data.setCell(1, 0, 'Huang Ang fa');        data.setCell(2, 0, 'Teng nu');        data.setCell(0, 1, 174);        data.setCell(1, 1, 523);        data.setCell(2, 1, 86);        var iconMap = {          174: 'http:          523: 'http:          86: 'http:                  }                visualization = new google.visualization.Table(document.getElementById('table'));                var formatter = new iconFormatter(iconMap);        formatter.format(data, 1);                visualization.draw(data, {allowHtml: true});      }      google.setOnLoadCallback(drawVisualization);    <;/script>;  <;/head>;  <;body>;    <;div id='table'>;<;/div>;  <;/body>;<;/html>;"
"var dragImgEl = document.createElement('span');dragImgEl.setAttribute('style',  'position: absolute; display: block; top: 0; left: 0; width: 0; height: 0;' );document.body.appendChild(dragImgEl);dt.setDragImage(dragImgEl, 0, 0);"
"iPad  ---WiFi---->;  iPhone's Hotspot  ---3G--->;  Carrier ---unknown--->;>;>;"
"#!/bin/bashecho '' >; temp0.js find ./bin/external -name \\*.js -exec cat {} >;>; temp0.js \\;echo ''>; temp1.jsecho '(function(){' >; temp1.jsfind ./bin/prop -name \\*.js -exec cat {} >;>; temp1.js \\;echo '})();' >;>; temp1.jscat temp0.js temp1.js >; script.jsrm temp1.js temp0.js"
"var viewport = {    width  : $(window).width(),    height : $(window).height()};"
"scrollwheel: false,"
"var loading_dialog = $('#loading_dialog');loading_dialog    .ajaxStart(function () {        loading_dialog.modal('show');    })    .ajaxStop(function () {        loading_dialog.modal('hide');});"
" <;script type='text/javascript'>; var projects = [   @Html.Raw('['' + 'aaa' + '', '' + 'bbb' + ''],') ]; <;/script>;"
"jse.executeScript('document.getElementsByName('body')[0].setAttribute('type', 'text');');"
"var s = 'try {document.writeln(arguments ? 'Function' : 'Eval') } catch(e) { document.writeln('Eval!') }';(new Function(s))();eval(s);"
"<;span data-bind='text: parentProperty().childProperty'>; <;/span>;"
"<;script>;var ary = {person1:'valerie', person2:'alex'};for (key in ary) {    document.write(key, '<;br>;')}document.write(ary['person2'], '<;br>;')<;/script>;"
"var x = 1;var y = xy = 4;"
"<;script src='FileSaver.js'>;<;/script>;<;script type='text/javascript'>;    var blob = new Blob(['Hello, world!'], {type: 'text/plain;charset=utf-8'});    saveAs(blob, 'hello world.txt');<;/script>;"
"function areEqualShallow(a, b) {    for(var key in a) {        if(!(key in b) || a[key] !== b[key]) {            return false;        }    }    for(var key in b) {        if(!(key in a) || a[key] !== b[key]) {            return false;        }    }    return true;}"
"<;add name='JavaScriptHandler'         path='*.js'         verb='*'         preCondition='integratedMode'         type='System.Web.StaticFileHandler' />;"
"new Bloodhound({    datumTokenizer: function(d) {        var test = Bloodhound.tokenizers.whitespace(d.value);            $.each(test,function(k,v){                i = 0;                while( (i+1) <; v.length ){                    test.push(v.substr(i,v.length));                    i++;                }            })            return test;        },    queryTokenizer: Bloodhound.tokenizers.whitespace,     limit: 10,    prefetch: {        url: '/lista.json',        ttl: 10000    }});"
"function timeout(ms) {  var timeout, promise;  promise = new Promise(function(resolve, reject) {    timeout = setTimeout(function() {      resolve('timeout done');    }, ms);  });   return {           promise:promise,            cancel:function(){clearTimeout(timeout );}          };}var timeOutObj =timeout(3000); timeOutObj.promise.then(function(result) {   console.log(result); });timeOutObj.cancel();"
"Object.defineProperty(wrapped, 'responseText', {     writable: true});"
"$(document).on('click', '.modal-backdrop', function (event) {    bootbox.hideAll()});"
"  it('should pan plots when you click and drag', function() {    var plot0 = element(by.css('.plot >; canvas'));    browser.actions()      .mouseMove(plot0, {x: 100, y: 100})       .mouseDown()      .mouseMove({x: 400, y: 0})       .perform();  });"
"a = {  foo: 'bar',  things: [1, 2, 3],  showFooForEach: function() {    this.things.map(function(thing) {      console.log(this.foo, thing);    }, this);  }}a.showFooForEach();"
"var o = {  property: function ([parameters]) {},  get property() {},  set property(value) {},};"
"var app = require('app');var force_quit = false;app.on('ready', function () {            mainWindow = new BrowserWindow({ width: 800, height: 600 });    mainWindow.on('close', function() {                 require('dialog').showMessageBox({            message: 'Close button has been pressed!',            buttons: ['OK']        });    });});"
"req.setRequestHeader('Authorization', 'Basic [base64 encoded password here]' );"
"_.mixin({    'deepMapKeys': function (obj, fn) {        var x = {};        _.forOwn(obj, function(v, k) {            if(_.isPlainObject(v))                v = _.deepMapKeys(v, fn);            x[fn(v, k)] = v;        });        return x;    }});"
"NodeList.prototype.forEach = Array.prototype.forEach;"
"function startPan(event) {  if (event.button != 2) {    return;  }  var x0 = event.screenX,      y0 = event.screenY;  function continuePan(event) {    var x = event.screenX,        y = event.screenY;    fc.relativePan({ x: x - x0, y: y - y0 });    x0 = x;    y0 = y;  }  function stopPan(event) {    $(window).off('mousemove', continuePan);    $(window).off('mouseup', stopPan);  };  $(window).mousemove(continuePan);  $(window).mouseup(stopPan);  $(window).contextmenu(cancelMenu);};function cancelMenu() {  $(window).off('contextmenu', cancelMenu);  return false;}$(canvasWrapper).mousedown(startPan);"
"var templates = ['hbs!resources/templates/maintemplate'], l = data.slides.length;for (var i=0; i<;l; i++ )    templates.push('hbs!resources/templates/overlay/'+data[i].template);require(templates, function(template) {    var html = template(data);});"
"console.debug(tinyMCE.activeEditor.getContent());tinymce.activeEditor.getContent();"
"cp conf/httpd/conf.d/enabledeflate.conf /etc/httpd/conf.d/enabledeflate.conf"
"var yesterday = new Date(date.getTime());yesterday.setDate(date.getDate() - 1);"
"if (yourObject.constructor === Float32Array) {     }"
"/** * @name BrowserSelector * @property {String} name * @property {Number} minVer * @property {Number} maxVer *//** @type {BrowserSelector|*} */var mySelector = {}; mySelector.name = 'foo'; mySelector.id = 'bar'; "
"{  background: `url(${require(`../../assets/${edge.node.name.toLowerCase()}.png`)}) center no-repeat`}"
"define([        'jquery'    'libraries/backbone'], function ($) {        var MovieRow = Backbone.View.extend({            render: function () {                return this;            }        });        return MovieRow;});"
"let arr = [1, 2, 3, 4];for (let i = 0; i <;= arr.length; i++) {  let a = [];  for (let j = i; j <; arr.length; j++) {    a.push(arr[j]);    console.log(a);  }}"
"curl 'localhost:9200/test-idx/_search?search_type=count' -d '{    'aggs': {        'count_by_type': {            'terms': {                'field': '_type'            }        }    }}'"
"import moment from 'moment';const filterByDateWhereClause = (startDate: moment, endDate: moment): string =>; {...};"
"/* eslint-disable no-unused-vars *//* eslint-enable no-unused-vars */"
